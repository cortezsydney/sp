summary(model3)
testTemp <- summary(model3)
baseTemp = testTemp$r.squared
print(baseTemp)
model9 <- lm(my_data$Y ~ x + m)
summary(model9)
testTemp <- summary(model9)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model3)), col="blue", lwd=3)
#4th degree
d = b^2
model4 <- lm(my_data$Y ~ x + b + c + d)
summary(model4)
testTemp <- summary(model4)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model4)), col="yellow", lwd=3)
#anova(model2, model3, model4, model5)
model <- lm(my_data$Y ~ x)
testModel <- summary(model)
baseModel = testModel$r.squared
print(baseModel)
temp <- lm(my_data$Y ~ poly(x, degree=2, row=T))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
loop = TRUE
count = 2
b = x^count
while(TRUE){
if (baseModel < baseTemp){
baseModel = baseTemp
count = count + 1
b = b + (x^count)
temp <- lm(my_data$Y ~ x + b)
print(summary(temp))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
print(count)
}else if (count == 5){
break;
}
}
#0.9691554  0.9691554
#0.9691554  0.9812287
#0.9955694  0.9821243
#0.9984124 0.9856444
#statistics by jim making statistics intuitive //multicollinearity (nagkakataon)
my_data <- read.csv("./poly/followers.csv", header=FALSE, col.names = c("X","Y"))
x <- as.POSIXct(my_data$X, format="%m/%d/%Y")
x <- as.numeric(x)
#get summary of your data
summary(my_data)
#then plot your data
plot(x, my_data$Y, main = "Polynomial Regression", las=1)
#now, lets fit a linear regression
model1 <- lm(my_data$Y ~ x)
summary(model1)
testTemp <- summary(model1)
baseTemp = testTemp$r.squared
print(baseTemp)
#and add  the line to the plot... make it thick and red
abline(model1, lwd = 3, col="red")
#2nd degree
b = x^2
model2 <- lm(my_data$Y ~ poly(x, degree=2, row=T))
summary(model2)
testTemp <- summary(model2)
baseTemp = testTemp$r.squared
print(baseTemp)
#lines(smooth.spline(x, predict(model2)), col="blue", lwd=3)
#3rd degree
b <- x^2
c <- x^3
m = b + x^3
model3 <- lm(my_data$Y ~ x + b + c)
summary(model3)
testTemp <- summary(model3)
baseTemp = testTemp$r.squared
print(baseTemp)
model9 <- lm(my_data$Y ~ x + m)
summary(model9)
testTemp <- summary(model9)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model3)), col="blue", lwd=3)
#4th degree
d = b^2
model4 <- lm(my_data$Y ~ x + b + c + d)
summary(model4)
testTemp <- summary(model4)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model4)), col="yellow", lwd=3)
#anova(model2, model3, model4, model5)
model <- lm(my_data$Y ~ x)
testModel <- summary(model)
baseModel = testModel$r.squared
print(baseModel)
temp <- lm(my_data$Y ~ poly(x, degree=2, row=T))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
loop = TRUE
count = 2
b = x^count
while(TRUE){
if (baseModel < baseTemp){
baseModel = baseTemp
count = count + 1
b = b + (x^count)
temp <- lm(my_data$Y ~ x + b)
print(summary(temp))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
print(count)
}else if (count == 5){
break;
}
}
#0.9691554  0.9691554
#0.9691554  0.9812287
#0.9955694  0.9821243
#0.9984124 0.9856444
#statistics by jim making statistics intuitive //multicollinearity (nagkakataon)
my_data <- read.csv("./poly/followers.csv", header=FALSE, col.names = c("X","Y"))
x <- as.POSIXct(my_data$X, format="%m/%d/%Y")
x <- as.numeric(x)
#get summary of your data
summary(my_data)
#then plot your data
plot(x, my_data$Y, main = "Polynomial Regression", las=1)
#now, lets fit a linear regression
model1 <- lm(my_data$Y ~ x)
summary(model1)
testTemp <- summary(model1)
baseTemp = testTemp$r.squared
print(baseTemp)
#and add  the line to the plot... make it thick and red
abline(model1, lwd = 3, col="red")
#2nd degree
b = x^2
model2 <- lm(my_data$Y ~ poly(x, degree=2, row=T))
summary(model2)
testTemp <- summary(model2)
baseTemp = testTemp$r.squared
print(baseTemp)
#lines(smooth.spline(x, predict(model2)), col="blue", lwd=3)
#3rd degree
b <- x^2
c <- x^3
m = b + x^3
model3 <- lm(my_data$Y ~ x + b + c)
summary(model3)
testTemp <- summary(model3)
baseTemp = testTemp$r.squared
print(baseTemp)
model9 <- lm(my_data$Y ~ x + m)
summary(model9)
testTemp <- summary(model9)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model3)), col="blue", lwd=3)
#4th degree
d = b^2
model4 <- lm(my_data$Y ~ x + b + c + d)
summary(model4)
testTemp <- summary(model4)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model4)), col="yellow", lwd=3)
#anova(model2, model3, model4, model5)
model <- lm(my_data$Y ~ x)
testModel <- summary(model)
baseModel = testModel$r.squared
print(baseModel)
temp <- lm(my_data$Y ~ poly(x, degree=2, row=T))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
loop = TRUE
count = 2
b = x^count
while(TRUE){
if (baseModel < baseTemp){
baseModel = baseTemp
count = count + 1
b = b + (x^count)
temp <- lm(my_data$Y ~ x + b)
print(summary(temp))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
print(count)
}else if (count == 5){
break;
}
}
#0.9691554  0.9691554
#0.9691554  0.9812287
#0.9955694  0.9821243
#0.9984124 0.9856444
#statistics by jim making statistics intuitive //multicollinearity (nagkakataon)
my_data <- read.csv("./poly/followers.csv", header=FALSE, col.names = c("X","Y"))
x <- as.POSIXct(my_data$X, format="%m/%d/%Y")
x <- as.numeric(x)
#get summary of your data
summary(my_data)
#then plot your data
plot(x, my_data$Y, main = "Polynomial Regression", las=1)
#now, lets fit a linear regression
model1 <- lm(my_data$Y ~ x)
summary(model1)
testTemp <- summary(model1)
baseTemp = testTemp$r.squared
print(baseTemp)
#and add  the line to the plot... make it thick and red
abline(model1, lwd = 3, col="red")
#2nd degree
b = x^2
model2 <- lm(my_data$Y ~ poly(x, degree=2, row=T))
summary(model2)
testTemp <- summary(model2)
baseTemp = testTemp$r.squared
print(baseTemp)
#lines(smooth.spline(x, predict(model2)), col="blue", lwd=3)
#3rd degree
b <- x^2
c <- x^3
m = b + x^3
model3 <- lm(my_data$Y ~ x + b + c)
summary(model3)
testTemp <- summary(model3)
baseTemp = testTemp$r.squared
print(baseTemp)
model9 <- lm(my_data$Y ~ x + m)
summary(model9)
testTemp <- summary(model9)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model3)), col="blue", lwd=3)
#4th degree
d = b^2
model4 <- lm(my_data$Y ~ x + b + c + d)
summary(model4)
testTemp <- summary(model4)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model4)), col="yellow", lwd=3)
#anova(model2, model3, model4, model5)
model <- lm(my_data$Y ~ x)
testModel <- summary(model)
baseModel = testModel$r.squared
print(baseModel)
temp <- lm(my_data$Y ~ poly(x, degree=2, row=T))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
loop = TRUE
count = 2
b = x^count
while(TRUE){
if (baseModel < baseTemp){
baseModel = baseTemp
count = count + 1
b = b + (x^count)
temp <- lm(my_data$Y ~ x + b)
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
}else if (count == 5){
break;
}
}
#0.9691554  0.9691554
#0.9691554  0.9812287
#0.9955694  0.9821243 9868019
#0.9984124 0.9856444 9869259
#statistics by jim making statistics intuitive //multicollinearity (nagkakataon)
my_data <- read.csv("./poly/followers.csv", header=FALSE, col.names = c("X","Y"))
x <- as.POSIXct(my_data$X, format="%m/%d/%Y")
x <- as.numeric(x)
#get summary of your data
summary(my_data)
#then plot your data
plot(x, my_data$Y, main = "Polynomial Regression", las=1)
#now, lets fit a linear regression
model1 <- lm(my_data$Y ~ x)
summary(model1)
testTemp <- summary(model1)
baseTemp = testTemp$r.squared
print(baseTemp)
#and add  the line to the plot... make it thick and red
abline(model1, lwd = 3, col="red")
#2nd degree
b = x^2
model2 <- lm(my_data$Y ~ poly(x, degree=2, row=T))
summary(model2)
testTemp <- summary(model2)
baseTemp = testTemp$r.squared
print(baseTemp)
#lines(smooth.spline(x, predict(model2)), col="blue", lwd=3)
#3rd degree
b <- x^2
c <- x^3
m = b + x^3
model3 <- lm(my_data$Y ~ x + b + c)
summary(model3)
testTemp <- summary(model3)
baseTemp = testTemp$r.squared
print(baseTemp)
model9 <- lm(my_data$Y ~ x + m)
summary(model9)
testTemp <- summary(model9)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model3)), col="blue", lwd=3)
#4th degree
d = b^2
model4 <- lm(my_data$Y ~ x + b + c + d)
summary(model4)
testTemp <- summary(model4)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model4)), col="yellow", lwd=3)
#anova(model2, model3, model4, model5)
model <- lm(my_data$Y ~ x)
testModel <- summary(model)
baseModel = testModel$r.squared
print(baseModel)
temp <- lm(my_data$Y ~ poly(x, degree=2, row=T))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
loop = TRUE
count = 2
b = x^count
while(TRUE){
if (baseModel < baseTemp){
baseModel = baseTemp
count = count + 1
b = b + (x^count)
temp <- lm(my_data$Y ~ x + b)
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
}else if (count == 5){
break;
}
}
#0.9691554  0.9691554
#0.9691554  0.9812287
#0.9955694  0.9821243 9868019
#0.9984124 0.9856444 9869259
#statistics by jim making statistics intuitive //multicollinearity (nagkakataon)
my_data <- read.csv("./poly/followers.csv", header=FALSE, col.names = c("X","Y"))
x <- as.POSIXct(my_data$X, format="%m/%d/%Y")
x <- as.numeric(x)
#get summary of your data
summary(my_data)
#then plot your data
plot(x, my_data$Y, main = "Polynomial Regression", las=1)
#now, lets fit a linear regression
model1 <- lm(my_data$Y ~ x)
summary(model1)
testTemp <- summary(model1)
baseTemp = testTemp$r.squared
print(baseTemp)
#and add  the line to the plot... make it thick and red
abline(model1, lwd = 3, col="red")
#2nd degree
b = x^2
model2 <- lm(my_data$Y ~ poly(x, degree=2, row=T))
summary(model2)
testTemp <- summary(model2)
baseTemp = testTemp$r.squared
print(baseTemp)
#lines(smooth.spline(x, predict(model2)), col="blue", lwd=3)
#3rd degree
b <- x^2
c <- x^3
m = b + x^3
model3 <- lm(my_data$Y ~ x + b + c)
summary(model3)
testTemp <- summary(model3)
baseTemp = testTemp$r.squared
print(baseTemp)
model9 <- lm(my_data$Y ~ x + m)
summary(model9)
testTemp <- summary(model9)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model3)), col="blue", lwd=3)
#4th degree
d = b^2
model4 <- lm(my_data$Y ~ x + b + c + d)
summary(model4)
testTemp <- summary(model4)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model4)), col="yellow", lwd=3)
#anova(model2, model3, model4, model5)
model <- lm(my_data$Y ~ x)
testModel <- summary(model)
baseModel = testModel$r.squared
print(baseModel)
temp <- lm(my_data$Y ~ poly(x, degree=2, row=T))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
loop = TRUE
count = 2
b = x^count
while(TRUE){
if (baseModel < baseTemp){
baseModel = baseTemp
count = count + 1
b = b + (x^count)
temp <- lm(my_data$Y ~ x + b)
summary(temp)
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
}else if (count == 5){
break;
}
}
#0.9691554  0.9691554
#0.9691554  0.9812287
#0.9955694  0.9821243 9868019
#0.9984124 0.9856444 9869259
#statistics by jim making statistics intuitive //multicollinearity (nagkakataon)
my_data <- read.csv("./poly/followers.csv", header=FALSE, col.names = c("X","Y"))
x <- as.POSIXct(my_data$X, format="%m/%d/%Y")
x <- as.numeric(x)
#get summary of your data
summary(my_data)
#then plot your data
plot(x, my_data$Y, main = "Polynomial Regression", las=1)
#now, lets fit a linear regression
model1 <- lm(my_data$Y ~ x)
summary(model1)
testTemp <- summary(model1)
baseTemp = testTemp$r.squared
print(baseTemp)
#and add  the line to the plot... make it thick and red
abline(model1, lwd = 3, col="red")
#2nd degree
b = x^2
model2 <- lm(my_data$Y ~ poly(x, degree=2, row=T))
summary(model2)
testTemp <- summary(model2)
baseTemp = testTemp$r.squared
print(baseTemp)
#lines(smooth.spline(x, predict(model2)), col="blue", lwd=3)
#3rd degree
b <- x^2
c <- x^3
m = b + x^3
model3 <- lm(my_data$Y ~ x + b + c)
summary(model3)
testTemp <- summary(model3)
baseTemp = testTemp$r.squared
print(baseTemp)
model9 <- lm(my_data$Y ~ x + m)
summary(model9)
testTemp <- summary(model9)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model3)), col="blue", lwd=3)
#4th degree
d = b^2
model4 <- lm(my_data$Y ~ x + b + c + d)
summary(model4)
testTemp <- summary(model4)
baseTemp = testTemp$r.squared
print(baseTemp)
lines(smooth.spline(x, predict(model4)), col="yellow", lwd=3)
#anova(model2, model3, model4, model5)
model <- lm(my_data$Y ~ x)
testModel <- summary(model)
baseModel = testModel$r.squared
print(baseModel)
temp <- lm(my_data$Y ~ poly(x, degree=2, row=T))
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
loop = TRUE
count = 2
b = x^count
while(TRUE){
if (baseModel < baseTemp){
baseModel = baseTemp
count = count + 1
b = b + (x^count)
temp <- lm(my_data$Y ~ x + b)
summary(temp)
testTemp <- summary(temp)
baseTemp = testTemp$r.squared
print(baseTemp)
}else if (count == 5){
break;
}
}
#0.9691554  0.9691554
#0.9691554  0.9812287
#0.9955694  0.9821243 9868019
#0.9984124 0.9856444 9869259
#statistics by jim making statistics intuitive //multicollinearity (nagkakataon)
